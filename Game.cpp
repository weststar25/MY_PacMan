#include "stdafx.h"
#include "Game.h"

extern short gridMapForGhost[22][19] = {
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
	{ 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1 },
	{ 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1 },
	{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
	{ 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1 },
	{ 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
	{ 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1 },
	{ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
	{ 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1 },
	{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
	{ 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1 },
	{ 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1 },
	{ 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1 },
	{ 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
	{ 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1 },
	{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
};

extern short gridMapForPacman[22][19] = {
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
	{ 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1 },
	{ 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1 },
	{ 1, 5, 1, 1, 3, 1, 1, 1, 3, 1, 3, 1, 1, 1, 3, 1, 1, 5, 1 },
	{ 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1 },
	{ 1, 3, 1, 1, 3, 1, 3, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 3, 1 },
	{ 1, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 3, 1 },
	{ 1, 1, 1, 1, 3, 1, 1, 1, 0, 1, 0, 1, 1, 1, 3, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 3, 1, 0, 1, 1, 1, 1, 1, 0, 1, 3, 1, 1, 1, 1 },
	{ 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0 },
	{ 1, 1, 1, 1, 3, 1, 0, 1, 1, 1, 1, 1, 0, 1, 3, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 1, 1, 1 },
	{ 1, 1, 1, 1, 3, 1, 0, 1, 1, 1, 1, 1, 0, 1, 3, 1, 1, 1, 1 },
	{ 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1 },
	{ 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 3, 1, 1, 1, 3, 1, 1, 3, 1 },
	{ 1, 5, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 1, 3, 5, 1 },
	{ 1, 1, 3, 1, 3, 1, 3, 1, 1, 1, 1, 1, 3, 1, 3, 1, 3, 1, 1 },
	{ 1, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 3, 1 },
	{ 1, 3, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 3, 1 },
	{ 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1 },
	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
};
Game::Game()
	: mMap(L"res/¸Ê.png")
	, mEnding(L"res/Ending.jpg")
	, mMapForPacman(gridMapForPacman)
	, mMapForGhost(gridMapForGhost)
	, mRound(1)
	, mDotCnt(156)
	, mScore(0)
	, mHuntCount(0)
	, mLife(3)
	, mReadyFlag(true)
{

}


Game::~Game()
{
}

void Game::initGame(CRect &rc)
{
	mCx = rc.Width();
	mCy = rc.Height();

	mLeftTop.x = (mCx - mMap.GetWidth()) / 2;
	mLeftTop.y = (mCy - mMap.GetHeight()) / 2;

}

void Game::initMap()
{
	for (int i = 0; i < 19; i++)
		for (int j = 0; j < 22; j++)	{

			if (gridMapForPacman[i][j] == 0)
				gridMapForPacman[i][j] = 3;
		}

	for (int i = 0; i < 19; i++)	{

		if (i != 4 && i != 7 && i != 11 && i != 14)
			gridMapForPacman[10][i] = 0;
	}

	for (int i = 8; i <= 13; i++)
	{
		gridMapForPacman[i][6] = 0;
		gridMapForPacman[i][12] = 0;
	}

	for (int i = 6; i <= 11; i++)
	{
		gridMapForPacman[8][i] = 0;
		gridMapForPacman[12][i] = 0;
	}
	gridMapForPacman[7][8] = 0;
	gridMapForPacman[7][10] = 0;

	gridMapForPacman[1][3] = 0;
	gridMapForPacman[1][16] = 0;
	gridMapForPacman[17][3] = 0;
	gridMapForPacman[17][16] = 0;
	gridMapForPacman[9][16] = 0;

}